// Generated by CoffeeScript 1.6.1
var Light, WebService,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

WebService = require('../../web-client').WebService;

Light = (function(_super) {

  __extends(Light, _super);

  Object.defineProperty(Light, '__super__', {
    enumerable: false
  });

  Light.DEFAULT_HOST = 'w3s.wmtransfer.com';

  Light.DEFAULT_PORT = 443;

  function Light(pfx, host, port) {
    this.pfx = pfx;
    if (host == null) {
      host = this.constructor.DEFAULT_HOST;
    }
    if (port == null) {
      port = this.constructor.DEFAULT_PORT;
    }
    Light.__super__.constructor.call(this, host, port);
  }

  Light.prototype.path = function(options) {
    return '/asp/XML' + options.name + 'Cert.asp';
  };

  Light.prototype.headers = function(body) {
    return {
      'content-type': 'application/xml; charset=' + this.charset,
      'content-length': body.length
    };
  };

  Light.prototype.assembleBody = function(options) {
    this.assembleXML({
      'w3s.request': options.data
    });
    return '<w3s.request><reqn>1</reqn><message></message></w3s.request>';
  };

  Light.prototype.parseBody = function(data) {
    return {
      data: data.toString()
    };
  };

  return Light;

})(WebService);

module.exports = Light;
