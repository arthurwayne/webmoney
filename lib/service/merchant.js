// Generated by CoffeeScript 1.6.3
var BaseService, MerchantService,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BaseService = require('./base');

MerchantService = (function(_super) {
  __extends(MerchantService, _super);

  MerchantService.DEFAULT_HOST = 'merchant.webmoney.ru';

  MerchantService.CLASIC_HOST = 'merchant.webmoney.ru';

  MerchantService.LIGHT_HOST = 'merchant.wmtransfer.com';

  MerchantService.METHODS = {
    TransGet: {
      sign: true,
      md5: true,
      secret: true,
      order: ['wmid', 'lmi_payee_purse', 'lmi_payment_no']
    },
    TransRequest: {
      sign: true,
      md5: true,
      secret: true,
      json: true,
      order: ['wmid', 'lmi_payee_purse', 'lmi_payment_no', 'lmi_clientnumber', 'lmi_clientnumber_type']
    },
    TransConfirm: {
      sign: true,
      md5: true,
      secret: true,
      json: true,
      order: ['wmid', 'lmi_payee_purse', 'lmi_wminvoiceid', 'lmi_clientnumber_code']
    },
    TrustRequest: {
      sign: true,
      light: true,
      order: ['wmid', 'lmi_payee_purse', 'lmi_clientnumber', 'lmi_clientnumber_type', 'lmi_sms_type']
    },
    TrustConfirm: {
      sign: true,
      light: true,
      order: ['wmid', 'lmi_purseid', 'lmi_clientnumber_code']
    },
    TransSave: {
      sign: true,
      md5: true,
      secret: true,
      order: ['wmid', 'lmi_payee_purse', 'lmi_payment_no', 'validityperiodinhours']
    }
  };

  function MerchantService(host, port, cred) {}

  MerchantService.prototype._path = function(options) {
    return '/conf/xml/XML' + options.method + '.asp';
  };

  MerchantService.prototype._prepare = function(options) {
    var content;
    content = {
      wmid: this.wmid,
      sign: '12345'
    };
    extend(content, options.data);
    return {
      'merchant.request': content
    };
  };

  MerchantService.prototype._prepare = function(options) {
    var content;
    content = {
      signtags: {
        wmid: this.wmid,
        sign: '12345'
      },
      paymenttags: options.data
    };
    return {
      'merchant.request': content
    };
  };

  return MerchantService;

})(BaseService);

module.exports = MerchantService;
