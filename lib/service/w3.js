// Generated by CoffeeScript 1.6.3
var BaseService, Signer, W3Service,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BaseService = require('./base');

Signer = require('../signer');

W3Service = (function(_super) {
  __extends(W3Service, _super);

  W3Service.CLASSIC_HOST = 'w3s.webmoney.ru';

  W3Service.LIGHT_HOST = 'w3s.wmtransfer.com';

  W3Service.METHODS = {
    Invoice: {
      container: 'invoice',
      order: ['invoice.orderid', 'invoice.customerwmid', 'invoice.storepurse', 'invoice.amount', 'invoice.desc', 'invoice.address', 'invoice.period', 'invoice.expiration', 'reqn']
    },
    Trans: {
      container: 'trans',
      order: ['reqn', 'trans.tranid', 'trans.pursesrc', 'trans.pursedest', 'trans.amount', 'trans.period', 'trans.pcode', 'trans.desc', 'trans.wminvid']
    },
    Operations: {
      container: 'getoperations',
      order: ['getoperations.purse', 'reqn']
    },
    OutInvoices: {
      container: 'getoutinvoices',
      order: ['getoutinvoices.purse', 'reqn']
    },
    FinishProtect: {
      container: 'finishprotect',
      order: ['finishprotect.wmtranid', 'finishprotect.pcode', 'reqn']
    },
    SendMsg: {
      container: 'message',
      order: ['message.receiverwmid', 'reqn', 'message.msgtext', 'message.msgsubj']
    },
    FindWMPurseNew: {
      container: 'testwmpurse',
      order: ['testwmpurse.wmid', 'testwmpurse.purse']
    },
    Purses: {
      container: 'getpurses',
      order: ['getpurses.wmid', 'reqn']
    },
    InInvoices: {
      container: 'getininvoices',
      order: ['getininvoices.wmid', 'getininvoices.wminvid', 'getininvoices.datestart', 'getininvoices.datefinish', 'reqn']
    },
    RejectProtect: {
      container: 'rejectprotect',
      order: ['rejectprotect.wmtranid', 'reqn']
    },
    TransMoneyback: {
      container: 'trans',
      order: ['reqn', 'trans.inwmtranid', 'trans.amount']
    },
    TrustList: {
      container: 'gettrustlist',
      order: ['gettrustlist.wmid', 'reqn']
    },
    TrustList2: {
      container: 'gettrustlist',
      order: ['gettrustlist.wmid', 'reqn']
    },
    TrustSave2: {
      container: 'trust',
      order: ['wmid', 'trust.purse', 'trust.masterwmid', 'reqn']
    },
    CreatePurse: {
      container: 'createpurse',
      order: ['createpurse.wmid', 'createpurse.pursetype', 'reqn']
    }
  };

  function W3Service(wmid, key, host, port) {
    this.wmid = wmid;
    this.key = key;
    this.host = host != null ? host : this.constructor.CLASSIC_HOST;
    this.port = port != null ? port : this.constructor.DEFAULT_PORT;
    this.signer = new Signer(this.key);
  }

  W3Service.prototype._pathClassic = function(options) {
    return '/asp/XML' + options.method + '.asp';
  };

  W3Service.prototype._pathLight = function(options) {
    return '/asp/XML' + options.method + 'Cert.asp';
  };

  W3Service.prototype._prepareClassic = function(options) {
    var content;
    content = {
      reqn: 3,
      wmid: this.wmid
    };
    content[options.container] = options.data;
    content.sign = this.signer.digest(this._signString(content, options.order));
    return {
      'w3s.request': content
    };
  };

  W3Service.prototype._prepareLight = function(options) {
    var content;
    content = {
      reqn: 2
    };
    content[options.container] = options.data;
    return {
      'w3s.request': content
    };
  };

  W3Service.prototype._unprepare = function(envelope) {
    return envelope['w3s.response'];
  };

  return W3Service;

})(BaseService);

module.exports = W3Service;
