// Generated by CoffeeScript 1.6.3
var List, Purse, PurseList, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

List = require('./list');

Purse = (function() {
  function Purse() {}

  Purse.prototype.operations = function(selector) {
    return new OperationList({
      purse: this._id
    }).filter(selector);
  };

  Purse.prototype.outInvoices = function(selector) {
    return new InvoiceList({
      purse: this._id
    }).filter(selector);
  };

  Purse.prototype.owner = function() {
    return new UserList({
      _id: this.wmid
    });
  };

  return Purse;

})();

PurseList = (function(_super) {
  __extends(PurseList, _super);

  function PurseList() {
    _ref = PurseList.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  PurseList.prototype.toArray = function(callback) {
    this._service.purses({
      wmid: this.wmid
    }, function(error, list) {
      if (typeof callback === "function") {
        callback(null);
      }
      return void 0;
    });
    return this;
  };

  return PurseList;

})(List);

module.exports = Purse;
