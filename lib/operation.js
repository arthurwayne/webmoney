// Generated by CoffeeScript 1.6.1
var Model, Operation,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Model = require('./model');

Operation = (function(_super) {

  __extends(Operation, _super);

  function Operation() {
    return Operation.__super__.constructor.apply(this, arguments);
  }

  Operation.prototype.process = function(callback) {
    var data;
    data = {
      trans: this.data
    };
    this.service.invoke({
      method: 'XMLTrans',
      data: data,
      callback: callback
    });
    return this;
  };

  Operation.prototype.reverse = function(callback) {
    var data;
    data = {
      trans: this.data
    };
    this.service.invoke({
      method: 'XMLTransMoneyback',
      data: data,
      callback: callback
    });
    return this;
  };

  Operation.prototype.finish = function(code, callback) {
    var data;
    data = {
      finishprotect: {
        wmtranid: this.id,
        pcode: code
      }
    };
    this.service.invoke({
      method: 'XMLFinishProtect',
      data: data,
      callback: callback
    });
    return this;
  };

  Operation.prototype.reject = function(callback) {
    var data;
    data = {
      rejectprotect: {
        wmtranid: this.id
      }
    };
    this.service.invoke({
      method: 'XMLRejectProtect',
      data: data,
      callback: callback
    });
    return this;
  };

  return Operation;

})(Model);

module.exports = Operation;
