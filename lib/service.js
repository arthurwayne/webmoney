// Generated by CoffeeScript 1.6.3
var BaseService, XML, filters, https;

https = require('https');

XML = require('../../../xml-objects').XML;

filters = require('../../../../http-helpers');

filters.patch();

filters.SERIALIZERS['application/xml'] = function(data) {
  return XML.stringify(data);
};

filters.PARSERS['text/xml'] = function(body) {
  return XML.parse(body);
};

BaseService = (function() {
  BaseService.DEFAULT_PORT = 443;

  function BaseService(host, port) {
    if (port == null) {
      port = this.constructor.DEFAULT_PORT;
    }
    if (typeof host !== 'string') {
      throw new Error('Host should be a string');
    }
    if (typeof port !== 'number') {
      throw new Error('Port should be a number');
    }
    this.host = host;
    this.port = port;
  }

  BaseService.prototype.invoke = function(method, input, callback) {
    var envelope, request,
      _this = this;
    envelope = this._prepare(output, definition);
    request = https.request(this._makeOptions(definition));
    request.on('response', function(response) {
      response.readAll(function(error, data) {
        data = _this._unprepare(filters.parse(response.headers, data));
        if (typeof callback === "function") {
          callback(null, data);
        }
        return void 0;
      });
      return void 0;
    });
    request.on('error', function(error) {
      if (typeof callback === "function") {
        callback(error);
      }
      return void 0;
    });
    request.sendXML(envelope);
    return this;
  };

  BaseService.createService = function(intf) {};

  BaseService.createMethod = function(definition) {
    return function(output, callback) {
      return this.invoke(definition, output, callback);
    };
  };

  return BaseService;

})();

module.exports = BaseService;
